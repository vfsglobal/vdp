@import "./assets/scss/arrow";

$purple: #172272;
$transparent_purple: rgba($purple, 0.9);
$orange: #f28a03;
$shadow_color: #333;
$light_shadow_color: rgba($shadow_color, 0.3);

$light_background_color: #f5f5f5;
$light_background_color2: #eee;
$dark_background_color: #ccc;
$dark_background_color2: rgba(#000, 0.1);
$content_color: #666;
$dark_content_color: #333;
$light_border_color: #ddd;

$content_para_line_height: 1.7em;

$main_boder_thinckness: 5px;

$space_details: (
  small: 20px
);

$container_spacing: 30px;
$container_big_spacing: $container_spacing * 2;
$box_spacing: 2%;
$box_big_spacing: 3%;
$basic_direction_details: (
  horizontal: left right,
  vertical: top bottom
);
$accordion_hor_padding: 15px;
$accordion_transition_duration: 0.7s;
$page_transition_duration: 1000ms;
$page_transition_delay: 300ms;
@mixin table_with_cell($valign: middle) {
  display: table;
  > * {
    @include table_cell($valign);
    @content;
  }
}
@mixin table_cell($valign: middle) {
  display: table-cell;
  vertical-align: $valign;
}
@mixin inline_valign($valign: middle) {
  display: inline-block;
  vertical-align: $valign;
}
@function get_position_opposite($position) {
  $position_opposites: (
    top: bottom,
    right: left
  );
  @each $key, $value in $position_opposites {
    @if ($key == $position) {
      @return $value;
    } @else if($value == $position) {
      @return $key;
    }
  }
}
@mixin repeat_css($property, $value, $repeat) {
  $new_value: $value;
  @for $i from 1 to $repeat {
    $new_value: $new_value + ", " + $value;
  }
  #{$property}: #{$new_value};
}
