@import "./assets/scss/globals";
@import "./assets/scss/column-details";

html,
body,
div,
section,
article,
aside,
header,
hgroup,
footer,
nav,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
address,
time,
span,
em,
strong,
img,
ol,
ul,
li,
figure,
canvas,
video {
  margin: 0;
  padding: 0;
  border: 0;
}

body {
  background: #fff;
  font-family: Roboto, sans-serif;
  color: $content_color;
  font-size: 14px;
}

a {
  text-decoration: none;
  outline: 0;
}

article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
menu,
nav,
section,
summary {
  display: block;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal;
  margin: 0;
}

ul {
  list-style: none;
}

p {
  margin: 0;
}

button {
  padding: 0;
  border: none;
  background: none;
  box-sizing: content-box;
}

@mixin selection() {
  $color: #fff;
  $background: lighten($purple, 10);

  ::-moz-selection {
    color: $color;
    background: $background;
  }
  ::selection {
    color: $color;
    background: $background;
  }
}

@include selection();

.wrapper {
  width: 95%;
  max-width: 1080px;
  margin: 0 auto;
}

.clearfix:after {
  content: "";
  display: block;
  clear: both;
}

@mixin pad_and_mar_classes() {
  $css_space_types: (
    pad: padding,
    mar: margin
  );

  $css_space_details: (
    t: top,
    b: bottom,
    v: (
      top,
      bottom
    )
  );
  @each $name, $value in $space_details {
    @each $class_prefix, $css_name in $css_space_types {
      @each $class_type, $css_suffixes in $css_space_details {
        .#{$class_prefix + $class_type + _ + $name} {
          @each $css_suffix in $css_suffixes {
            #{$css_name + '-' + $css_suffix}: $value;
          }
        }
      }
    }
  }
}
@include pad_and_mar_classes();
.off_white_bg {
  background: $light_background_color;
}
.bg_icon {
  position: relative;
  z-index: 1;
  > i {
    position: absolute;
    left: 50%;
    top: 50%;
    font-size: 130px;
    color: rgba(#000, 0.03);
    transform: translate(-50%, -50%);
    z-index: -1;
  }
  &.dark > i {
    color: rgba(#000, 0.05);
  }
}
.heading_wrapper {
  text-align: center;
}
.main_heading {
  display: inline-block;
  position: relative;
  font-family: Poppins, sans-serif;
  font-size: 20px;
  &%before_after {
    content: "";
    position: absolute;
    left: 50%;
    height: 1px;
    background: $orange;
    transform: translateX(-50%);
  }
  &:before {
    @extend %before_after;
    bottom: -12px;
    width: 40px;
  }
  &:after {
    @extend %before_after;
    bottom: -15px;
    width: 60px;
  }
  &.top_space {
    margin-top: $container_spacing;
  }
  &.bottom_space {
    margin-bottom: $container_spacing;
  }
  $small_space: 10px;
  &.small_top_space {
    margin-top: $small_space;
  }
  &.small_bottom_space {
    margin-bottom: $small_space;
  }
  &.small_border_space:before {
    bottom: -2px;
  }
  &.small_border_space:after {
    bottom: -5px;
  }
}
h4.normal {
  font-family: Poppins, sans-serif;
  font-size: 16px;
  font-weight: bold;
  color: $dark_content_color;
}
h5.normal {
  font-family: Poppins, sans-serif;
  font-size: 1em;
  font-weight: bold;
}
p.main {
  font-size: 16px;
  text-align: center;
  padding-bottom: $container_spacing;
  line-height: $content_para_line_height;
  max-width: 800px;
  margin: 0 auto;
}
ul.seperator_content_list > li:not(:last-child) {
  padding-bottom: $container_spacing;
  border-bottom: 1px solid $light_border_color;
  margin-bottom: $container_spacing;
}
ul.side_heading_content_list {
  padding-bottom: 20px;
  > li {
    display: flex;
    &:not(:last-child) > * {
      padding-bottom: 20px;
    }
    > .heading_wrapper {
      width: 20%;
      text-align: left;
      > .normal {
        padding: 0px;
      }
    }
    > .main_content {
      flex: 1;
      padding-left: 20px;
      border-left: 3px solid $light_border_color;
      margin-left: 20px;
    }
  }
}
%bottom_border_link {
  position: relative;
  &:before {
    content: "";
    position: absolute;
    left: 0;
    bottom: -3px;
    width: 100%;
    height: 1px;
    background: #fff;
    opacity: 0;
    transform: scaleX(0);
    transition: all 0.3s;
  }
  &:hover:before {
    opacity: 1;
    transform: scaleX(1);
  }
}
a.bottom_border {
  @extend %bottom_border_link;
}
.main_content_container {
  p {
    line-height: $content_para_line_height;
    &:not(:last-child) {
      padding-bottom: 20px;
    }
    &.small_space {
      padding-bottom: 10px;
    }
    img {
      vertical-align: middle;
    }
  }
  a {
    color: $orange;
    @extend %bottom_border_link;
    &:before {
      background: $orange;
    }
  }
  h4.normal,
  h5.normal {
    padding-bottom: 10px;
    padding-top: 10px;
  }
  .seperator {
    padding-bottom: 10px;
    border-bottom: 1px solid $light_border_color;
    margin-bottom: 15px;
  }
  ul.normal_list {
    list-style-type: disc;
    padding-left: 20px;
    line-height: $content_para_line_height;
    &:not(:last-child) {
      padding-bottom: 20px;
    }
    > li:not(:last-child) {
      padding-bottom: 10px;
    }
  }
  ol {
    padding-left: 20px;
    line-height: $content_para_line_height;
    &:not(:last-child) {
      padding-bottom: 20px;
    }
    &.big_space > li:not(:last-child) {
      padding-bottom: 20px;
    }
  }
}
.page_container {
  position: relative;
  overflow: hidden;
}
@include add_transition_default_css((page-from-right page-from-left)) {
  transition: all $page_transition_duration $page_transition_delay;
}
.page-from-right-enter,
.page-from-left-leave-to {
  transform: translateX(50%);
  opacity: 0;
}
.page-from-left-enter,
.page-from-right-leave-to {
  transform: translateX(-50%);
  opacity: 0;
}

.inner_page_container {
  position: relative;
}
@include add_transition_default_css(inner-page) {
  transition: all $inner_page_transition_duration;
}
.inner-page-enter, .inner-page-leave-to {
  opacity: 0;
}